#Direction:low; If after recursion; Else before return#
last recursion low = 0,  mid = 1, high = 0 
recursion low = 0,  mid = 0, high = 1 
recursion low = 0,  mid = 1, high = 2 
recursion low = 0,  mid = 2, high = 4 
recursion low = 0,  mid = 4, high = 9 

#Direction:low; If before recursion; Else before return#
recursion low = 0,  mid = 4, high = 9 
recursion low = 0,  mid = 2, high = 4 
recursion low = 0,  mid = 1, high = 2 
recursion low = 0,  mid = 0, high = 1 
last recursion low = 0,  mid = 0, high = 0 

#Direction:low; If before recursion; Else after return#
recursion low = 0,  mid = 4, high = 9 
recursion low = 0,  mid = 2, high = 4 
recursion low = 0,  mid = 1, high = 2 
recursion low = 0,  mid = 0, high = 1 

#Direction:low; If test recursion; Else before return#
before recursion low = 0,  mid = 4, high = 9 
before recursion low = 0,  mid = 2, high = 4 
before recursion low = 0,  mid = 1, high = 2 
before recursion low = 0,  mid = 0, high = 1 
last recursion low = 0,  mid = 0, high = 0 
after recursion low = 0,  mid = 0, high = 1 
after recursion low = 0,  mid = 1, high = 2 
after recursion low = 0,  mid = 2, high = 4 
after recursion low = 0,  mid = 4, high = 9 

#Direction:both; If test recursion; Else before return#
before recursion        low = 0,  mid = 4, high = 9 
before recursion        low = 0,  mid = 2, high = 4 
before recursion        low = 0,  mid = 1, high = 2 
before recursion        low = 0,  mid = 0, high = 1 
last recursion          low = 0,  mid = 0, high = 0 
after low recursion     low = 0,  mid = 0, high = 1 
last recursion          low = 1,  mid = 0, high = 1 
after high recursion    low = 0,  mid = 0, high = 1 
after low recursion     low = 0,  mid = 1, high = 2 
last recursion          low = 2,  mid = 0, high = 2 
after high recursion    low = 0,  mid = 1, high = 2 
after low recursion     low = 0,  mid = 2, high = 4 
before recursion        low = 3,  mid = 3, high = 4 
last recursion          low = 3,  mid = 0, high = 3 
after low recursion     low = 3,  mid = 3, high = 4 
last recursion          low = 4,  mid = 0, high = 4 
after high recursion    low = 3,  mid = 3, high = 4 
after high recursion    low = 0,  mid = 2, high = 4 
after low recursion     low = 0,  mid = 4, high = 9 
before recursion        low = 5,  mid = 7, high = 9 
before recursion        low = 5,  mid = 6, high = 7 
before recursion        low = 5,  mid = 5, high = 6 
last recursion          low = 5,  mid = 0, high = 5 
after low recursion     low = 5,  mid = 5, high = 6 
last recursion          low = 6,  mid = 0, high = 6 
after high recursion    low = 5,  mid = 5, high = 6 
after low recursion     low = 5,  mid = 6, high = 7 
last recursion          low = 7,  mid = 0, high = 7 
after high recursion    low = 5,  mid = 6, high = 7 
after low recursion     low = 5,  mid = 7, high = 9 
before recursion        low = 8,  mid = 8, high = 9 
last recursion          low = 8,  mid = 0, high = 8 
after low recursion     low = 8,  mid = 8, high = 9 
last recursion          low = 9,  mid = 0, high = 9 
after high recursion    low = 8,  mid = 8, high = 9 
after high recursion    low = 5,  mid = 7, high = 9 
after high recursion    low = 0,  mid = 4, high = 9 

#Direction:both; Only output the commit part after first divide()#
after low recursion     low = 0,  mid = 0, high = 1 
after low recursion     low = 0,  mid = 1, high = 2 
after low recursion     low = 0,  mid = 2, high = 4 
after low recursion     low = 3,  mid = 3, high = 4 
after low recursion     low = 0,  mid = 4, high = 9 
after low recursion     low = 5,  mid = 5, high = 6 
after low recursion     low = 5,  mid = 6, high = 7 
after low recursion     low = 5,  mid = 7, high = 9 
after low recursion     low = 8,  mid = 8, high = 9 

#Direction:both; Only output the commit part after second divide()#
after high recursion    low = 0,  mid = 0, high = 1 
after high recursion    low = 0,  mid = 1, high = 2 
after high recursion    low = 3,  mid = 3, high = 4 
after high recursion    low = 0,  mid = 2, high = 4 
after high recursion    low = 5,  mid = 5, high = 6 
after high recursion    low = 5,  mid = 6, high = 7 
after high recursion    low = 8,  mid = 8, high = 9 
after high recursion    low = 5,  mid = 7, high = 9 
after high recursion    low = 0,  mid = 4, high = 9 

#Trace all#
[ 
50 24 35 37 27 23 20 41 42 7 
]
Input list is 
[ 
50 24 35 37 27 23 20 41 42 7 
]
start   low high mid 
          0   1   0 
Forloop
              l1 =  0        l2 =  1    i =  0  mid =  0
        list[ 0] = 50  list[ 1] = 24
           b[ 0] =     list[ 1] = 24
              l1 =  0        l2 =  2    i =  1  mid =  0
Forwhile low
           b[ 1] =     list[ 0] = 50
Forwhile high
[ 
24 50 0 0 0 0 0 0 0 0 
]
Input list is 
[ 
24 50 35 37 27 23 20 41 42 7 
]
start   low high mid 
          0   2   1 
Forloop
              l1 =  0        l2 =  2    i =  0  mid =  1
        list[ 0] = 24  list[ 2] = 35
           b[ 0] =     list[ 0] = 24
              l1 =  1        l2 =  2    i =  1  mid =  1
        list[ 1] = 50  list[ 2] = 35
           b[ 1] =     list[ 2] = 35
              l1 =  1        l2 =  3    i =  2  mid =  1
Forwhile low
           b[ 2] =     list[ 1] = 50
Forwhile high
[ 
24 35 50 0 0 0 0 0 0 0 
]
Input list is 
[ 
24 35 50 37 27 23 20 41 42 7 
]
start   low high mid 
          3   4   3 
Forloop
              l1 =  3        l2 =  4    i =  3  mid =  3
        list[ 3] = 37  list[ 4] = 27
           b[ 3] =     list[ 4] = 27
              l1 =  3        l2 =  5    i =  4  mid =  3
Forwhile low
           b[ 4] =     list[ 3] = 37
Forwhile high
[ 
24 35 50 27 37 0 0 0 0 0 
]
Input list is 
[ 
24 35 50 27 37 23 20 41 42 7 
]
start   low high mid 
          0   4   2 
Forloop
              l1 =  0        l2 =  3    i =  0  mid =  2
        list[ 0] = 24  list[ 3] = 27
           b[ 0] =     list[ 0] = 24
              l1 =  1        l2 =  3    i =  1  mid =  2
        list[ 1] = 35  list[ 3] = 27
           b[ 1] =     list[ 3] = 27
              l1 =  1        l2 =  4    i =  2  mid =  2
        list[ 1] = 35  list[ 4] = 37
           b[ 2] =     list[ 1] = 35
              l1 =  2        l2 =  4    i =  3  mid =  2
        list[ 2] = 50  list[ 4] = 37
           b[ 3] =     list[ 4] = 37
              l1 =  2        l2 =  5    i =  4  mid =  2
Forwhile low
           b[ 4] =     list[ 2] = 50
Forwhile high
[ 
24 27 35 37 50 0 0 0 0 0 
]
Input list is 
[ 
24 27 35 37 50 23 20 41 42 7 
]
start   low high mid 
          5   6   5 
Forloop
              l1 =  5        l2 =  6    i =  5  mid =  5
        list[ 5] = 23  list[ 6] = 20
           b[ 5] =     list[ 6] = 20
              l1 =  5        l2 =  7    i =  6  mid =  5
Forwhile low
           b[ 6] =     list[ 5] = 23
Forwhile high
[ 
24 27 35 37 50 20 23 0 0 0 
]
Input list is 
[ 
24 27 35 37 50 20 23 41 42 7 
]
start   low high mid 
          5   7   6 
Forloop
              l1 =  5        l2 =  7    i =  5  mid =  6
        list[ 5] = 20  list[ 7] = 41
           b[ 5] =     list[ 5] = 20
              l1 =  6        l2 =  7    i =  6  mid =  6
        list[ 6] = 23  list[ 7] = 41
           b[ 6] =     list[ 6] = 23
              l1 =  7        l2 =  7    i =  7  mid =  6
Forwhile low
Forwhile high
           b[ 7] =     list[ 7] = 41
[ 
24 27 35 37 50 20 23 41 0 0 
]
Input list is 
[ 
24 27 35 37 50 20 23 41 42 7 
]
start   low high mid 
          8   9   8 
Forloop
              l1 =  8        l2 =  9    i =  8  mid =  8
        list[ 8] = 42  list[ 9] =  7
           b[ 8] =     list[ 9] =  7
              l1 =  8        l2 = 10    i =  9  mid =  8
Forwhile low
           b[ 9] =     list[ 8] = 42
Forwhile high
[ 
24 27 35 37 50 20 23 41 7 42 
]
Input list is 
[ 
24 27 35 37 50 20 23 41 7 42 
]
start   low high mid 
          5   9   7 
Forloop
              l1 =  5        l2 =  8    i =  5  mid =  7
        list[ 5] = 20  list[ 8] =  7
           b[ 5] =     list[ 8] =  7
              l1 =  5        l2 =  9    i =  6  mid =  7
        list[ 5] = 20  list[ 9] = 42
           b[ 6] =     list[ 5] = 20
              l1 =  6        l2 =  9    i =  7  mid =  7
        list[ 6] = 23  list[ 9] = 42
           b[ 7] =     list[ 6] = 23
              l1 =  7        l2 =  9    i =  8  mid =  7
        list[ 7] = 41  list[ 9] = 42
           b[ 8] =     list[ 7] = 41
              l1 =  8        l2 =  9    i =  9  mid =  7
Forwhile low
Forwhile high
           b[ 9] =     list[ 9] = 42
[ 
24 27 35 37 50 7 20 23 41 42 
]
Input list is 
[ 
24 27 35 37 50 7 20 23 41 42 
]
start   low high mid 
          0   9   4 
Forloop
              l1 =  0        l2 =  5    i =  0  mid =  4
        list[ 0] = 24  list[ 5] =  7
           b[ 0] =     list[ 5] =  7
              l1 =  0        l2 =  6    i =  1  mid =  4
        list[ 0] = 24  list[ 6] = 20
           b[ 1] =     list[ 6] = 20
              l1 =  0        l2 =  7    i =  2  mid =  4
        list[ 0] = 24  list[ 7] = 23
           b[ 2] =     list[ 7] = 23
              l1 =  0        l2 =  8    i =  3  mid =  4
        list[ 0] = 24  list[ 8] = 41
           b[ 3] =     list[ 0] = 24
              l1 =  1        l2 =  8    i =  4  mid =  4
        list[ 1] = 27  list[ 8] = 41
           b[ 4] =     list[ 1] = 27
              l1 =  2        l2 =  8    i =  5  mid =  4
        list[ 2] = 35  list[ 8] = 41
           b[ 5] =     list[ 2] = 35
              l1 =  3        l2 =  8    i =  6  mid =  4
        list[ 3] = 37  list[ 8] = 41
           b[ 6] =     list[ 3] = 37
              l1 =  4        l2 =  8    i =  7  mid =  4
        list[ 4] = 50  list[ 8] = 41
           b[ 7] =     list[ 8] = 41
              l1 =  4        l2 =  9    i =  8  mid =  4
        list[ 4] = 50  list[ 9] = 42
           b[ 8] =     list[ 9] = 42
              l1 =  4        l2 = 10    i =  9  mid =  4
Forwhile low
           b[ 9] =     list[ 4] = 50
Forwhile high
[ 
7 20 23 24 27 35 37 41 42 50 
]
